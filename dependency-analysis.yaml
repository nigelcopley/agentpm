analyzed_at: '2025-10-26T14:22:22.406854'
circular_dependencies:
- cycle:
  - module_d
  - module_e
  - module_d
  severity: high
  suggestion: Extract shared functionality to a third module. Consider dependency
    inversion or interface segregation.
coupling_metrics:
- afferent_coupling: 1
  efferent_coupling: 1
  instability: 0.5
  module: module_e
- afferent_coupling: 1
  efferent_coupling: 1
  instability: 0.5
  module: module_d
- afferent_coupling: 2
  efferent_coupling: 0
  instability: 0.0
  module: module_a
- afferent_coupling: 0
  efferent_coupling: 0
  instability: 0.0
  module: __init__
- afferent_coupling: 1
  efferent_coupling: 1
  instability: 0.5
  module: module_c
- afferent_coupling: 2
  efferent_coupling: 1
  instability: 0.3333333333333333
  module: module_b
- afferent_coupling: 0
  efferent_coupling: 3
  instability: 1.0
  module: module_f
leaf_modules:
- module_a
- __init__
max_depth: -1
project_path: /private/var/folders/53/jjm94d8s1_x0dqtqskv43bk40000gn/T/pytest-of-nigelcopley/pytest-35/test_graph_yaml_format0/test_project
root_modules:
- __init__
- module_f
total_dependencies: 7
total_modules: 7
