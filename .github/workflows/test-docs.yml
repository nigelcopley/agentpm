name: Test Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - '../../agentpm/core/database/enums/status.py'
      - 'tests/docs/**'
      - 'scripts/poc_*.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - '../../agentpm/core/database/enums/status.py'
      - 'tests/docs/**'

jobs:
  test-documentation:
    name: Validate Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Verify state diagrams are current
        run: |
          python scripts/poc_state_diagrams.py
          # Check if diagrams changed (would indicate drift)
          if ! git diff --quiet docs/reference/state-diagrams/; then
            echo "::error::State diagrams are out of date. Run 'python scripts/poc_state_diagrams.py' locally."
            git diff docs/reference/state-diagrams/
            exit 1
          fi

      - name: Test markdown code examples
        run: |
          pytest tests/docs/test_markdown_examples.py -v --tb=short

      - name: Test state machine consistency
        run: |
          pytest tests/docs/test_state_machines.py -v --tb=short

      - name: Run POC integration demo
        run: |
          bash scripts/poc_integration_demo.sh

      - name: Generate test report
        if: always()
        run: |
          pytest tests/docs/ --html=doc-test-report.html --self-contained-html || true

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: documentation-test-report
          path: doc-test-report.html
          retention-days: 30

      - name: Comment on PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Documentation tests failed. Please check the [test report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })

  lint-markdown:
    name: Lint Markdown Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check markdown formatting
        uses: DavidAnson/markdownlint-cli2-action@v11
        with:
          globs: 'docs/**/*.md'
          config: |
            {
              "default": true,
              "MD013": false,
              "MD033": false,
              "MD041": false
            }

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          config-file: '.github/markdown-link-check-config.json'
          folder-path: 'docs/'
