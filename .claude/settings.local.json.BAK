{
  "permissions": {
    "allow": [
      "Bash(echo \"BROKEN: $f\")",
      "Bash(do echo \"Testing: $f\")",
      "Bash(xargs -I {} sh -c 'grep -l \"\"\"\"^from\\|^import\"\"\"\" {} 2>/dev/null && echo {}')",
      "Bash(find docs/project-plan -type f -name \"*.md\" -exec sh -c 'echo \"\"\"\"{}|$(wc -l < \"\"\"\"{}\"\"\"\")|$(stat -f \"\"\"\"%Sm\"\"\"\" -t \"\"\"\"%Y-%m-%d\"\"\"\" \"\"\"\"{}\"\"\"\")\"\"\"\"')",
      "Bash(column:*)",
      "mcp__asana__asana_list_workspaces",
      "mcp__asana__asana_typeahead_search",
      "mcp__asana__asana_get_task",
      "mcp__asana__asana_update_task",
      "mcp__asana__asana_create_task",
      "Bash(for:*)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(xargs -I {} sh -c 'echo \"\"\"\"=== {} ===\"\"\"\" && head -20 \"\"\"\"{}\"\"\"\"')",
      "WebFetch(domain:support.claude.com)",
      "Bash(mkdir:*)",
      "Read(//private/tmp/aipm-demo/**)",
      "mcp__asana__asana_search_tasks",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Read(//Users/nigelcopley/.project_manager/.claude/agents/**)",
      "Read(//Users/nigelcopley/.project_manager/**)",
      "mcp__asana__asana_set_parent_for_task",
      "mcp__asana__asana_create_task_story",
      "Bash(pytest:*)",
      "Bash(cloc:*)",
      "Bash(python3:*)",
      "Bash(sqlite3:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(tree:*)",
      "Bash(python:*)",
      "Bash(do mv \"$f\" \"$f/WI-010/WI-009\")",
      "mcp__asana__asana_delete_task",
      "mcp__asana__asana_set_task_dependencies",
      "Bash(echo:*)",
      "Bash(apm:*)",
      "Bash(pip install:*)",
      "Bash(timeout 10 apm:*)",
      "Read(//Users/nigelcopley/**)",
      "Bash(/opt/homebrew/bin/claude -p \"Say hello\" --output-format json)",
      "Bash(/opt/homebrew/bin/claude -p \"Fill this template: [INSTRUCTION: Say hello]. Replace the instruction with ''''Hello World''''\" --output-format json)",
      "Bash(/opt/homebrew/bin/claude --version)",
      "Bash(/opt/homebrew/bin/claude -p \"Output exactly: Hello World\" --output-format json)",
      "Bash(/opt/homebrew/bin/claude -p \"Replace [INSTRUCTION: Say hello] with the word Hello\" --output-format json)",
      "Bash(/opt/homebrew/bin/claude -p \"Fill: Tech Stack is [INSTRUCTION: List Python and Django]. Replace with: Python 3.11, Django 4.2\" --output-format json)",
      "Bash(/opt/homebrew/bin/claude:*)",
      "Bash(pip uninstall:*)",
      "Bash(time apm agents generate:*)",
      "Bash(time:*)",
      "Bash(do echo \"=== $cmd ===\")",
      "Read(//private/tmp/test-new-commands/**)",
      "mcp__asana__asana_get_project",
      "mcp__asana__asana_get_workspace_users",
      "Bash(timeout 30 apm agents generate:*)",
      "Bash(awk:*)",
      "Read(//private/tmp/test-summaries/**)",
      "Bash(do echo \"=== WI-$wi ===\")",
      "Read(//private/tmp/**)",
      "Bash(open htmlcov/agentpm_core_workflow_service_py.html)",
      "Bash(git reset:*)",
      "Read(//tmp/**)",
      "Bash(git mv:*)",
      "Bash(git log:*)",
      "Bash(do echo \"=== Task $id ===\")",
      "Bash(do echo \"=== $plugin ===\")",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(__NEW_LINE__ apm task create \"Update CLI Commands for Computed Context\" )",
      "Bash(__NEW_LINE__ apm task create \"Context Derivation Testing\" )",
      "Bash(__NEW_LINE__ apm task create \"Schema Migration & Data Cleanup\" )",
      "Bash(__NEW_LINE__ apm task create \"Context Derivation Documentation\" )",
      "WebFetch(domain:supermemory.ai)",
      "WebFetch(domain:www.cognee.ai)",
      "WebFetch(domain:mem0.ai)",
      "WebSearch",
      "WebFetch(domain:docs.mem0.ai)",
      "Bash(./.claude/hooks/session-end.sh:*)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/session-start.py"
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/session-end.py"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/pre-tool-use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/post-tool-use.py"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/user-prompt-submit.py"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "./.claude/hooks/pre-compact.py"
          }
        ]
      }
    ]
  },
  "outputStyle": "Explanatory"
}
