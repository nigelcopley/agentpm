#!/usr/bin/env bash
#
# Claude Code SessionEnd Hook - Handover Context Generation
#
# Creates NEXT-SESSION.md with handover notes for continuity
# Runs in background when session ends (Ctrl-C, /exit, logout)
#

set -uo pipefail

# Read hook input
HOOK_INPUT=$(cat 2>/dev/null || echo '{}')
SESSION_ID=$(echo "$HOOK_INPUT" | jq -r '.session_id // "unknown"' 2>/dev/null || echo "unknown")
REASON=$(echo "$HOOK_INPUT" | jq -r '.reason // "unknown"' 2>/dev/null || echo "unknown")
TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")

# Log that hook triggered
echo "🪝 SessionEnd: Generating handover context (session: $SESSION_ID, reason: $REASON)" >&2

# ============================================================================
# Generate NEXT-SESSION.md with handover context
# ============================================================================

HANDOVER_FILE="NEXT-SESSION.md"

cat > "$HANDOVER_FILE" << 'HEADER'
# Next Session Handover

**Auto-generated by SessionEnd hook**

HEADER

echo "**Last Updated**: $TIMESTAMP" >> "$HANDOVER_FILE"
echo "**Session ID**: $SESSION_ID" >> "$HANDOVER_FILE"
echo "" >> "$HANDOVER_FILE"

# Active Work Items
echo "## 📋 Active Work Items" >> "$HANDOVER_FILE"
echo "" >> "$HANDOVER_FILE"
if command -v apm &> /dev/null; then
    ACTIVE_WI=$(apm work-item list --status=in_progress --status=review 2>/dev/null | grep -E "^\│" | grep -v "^┃" | grep -v "^┏" | grep -v "^┗" | grep -v "^┡" | head -5 || echo "")
    if [ -n "$ACTIVE_WI" ]; then
        echo "\`\`\`" >> "$HANDOVER_FILE"
        echo "$ACTIVE_WI" >> "$HANDOVER_FILE"
        echo "\`\`\`" >> "$HANDOVER_FILE"
    else
        echo "No active work items" >> "$HANDOVER_FILE"
    fi
else
    echo "⚠️ apm not available" >> "$HANDOVER_FILE"
fi
echo "" >> "$HANDOVER_FILE"

# Active Tasks
echo "## ✅ Active Tasks" >> "$HANDOVER_FILE"
echo "" >> "$HANDOVER_FILE"
if command -v apm &> /dev/null; then
    ACTIVE_TASKS=$(apm task list --status=in_progress --status=review 2>/dev/null | grep -E "^\│" | grep -v "^┃" | grep -v "^┏" | grep -v "^┗" | grep -v "^┡" | head -5 || echo "")
    if [ -n "$ACTIVE_TASKS" ]; then
        echo "\`\`\`" >> "$HANDOVER_FILE"
        echo "$ACTIVE_TASKS" >> "$HANDOVER_FILE"
        echo "\`\`\`" >> "$HANDOVER_FILE"
    else
        echo "No active tasks" >> "$HANDOVER_FILE"
    fi
fi
echo "" >> "$HANDOVER_FILE"

# Uncommitted Changes
echo "## 🔄 Uncommitted Changes" >> "$HANDOVER_FILE"
echo "" >> "$HANDOVER_FILE"
if git status --short 2>/dev/null | grep -q .; then
    echo "\`\`\`" >> "$HANDOVER_FILE"
    git status --short 2>/dev/null | head -20 >> "$HANDOVER_FILE"
    echo "\`\`\`" >> "$HANDOVER_FILE"
    echo "" >> "$HANDOVER_FILE"
    echo "⚠️ **Action needed**: Review and commit changes" >> "$HANDOVER_FILE"
else
    echo "✅ Working tree is clean" >> "$HANDOVER_FILE"
fi
echo "" >> "$HANDOVER_FILE"

# Recent Commits
echo "## 📝 Recent Commits (Last 3)" >> "$HANDOVER_FILE"
echo "" >> "$HANDOVER_FILE"
if git log --oneline -3 2>/dev/null; then
    echo "\`\`\`" >> "$HANDOVER_FILE"
    git log --oneline -3 2>/dev/null >> "$HANDOVER_FILE"
    echo "\`\`\`" >> "$HANDOVER_FILE"
fi
echo "" >> "$HANDOVER_FILE"

# Quick Start Commands
cat >> "$HANDOVER_FILE" << 'COMMANDS'
## 🚀 Quick Start Commands

```bash
# Check status
apm status

# View active work
apm work-item list --status=in_progress
apm task list --status=in_progress

# Continue work
apm task show <id>        # See task details
apm task start <id>       # Resume task

# Check dependencies
apm task list-dependencies <id>
apm task list-blockers <id>
```

## 📖 Key Resources

- RULES.md - Development standards
- CLAUDE.md - AIPM entry point and navigation
- STATUS.md - Current project state
- Flask Dashboard: `flask --app agentpm.web.app run`

---

*Generated automatically by SessionEnd hook*
COMMANDS

# Also append to session log
echo "✅ Handover context saved to $HANDOVER_FILE" >> ".aipm/session-end.log"

# Exit successfully
exit 0
