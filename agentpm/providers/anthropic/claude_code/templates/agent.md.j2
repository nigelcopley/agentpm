---
name: {{ agent.role }}
description: {{ agent.description or agent.display_name }}
tools: Read, Grep, Glob, Write, Edit, Bash
{% if agent_skills %}
skills:
{% for skill in agent_skills %}
  - {{ skill.name }}
{% endfor %}
{% endif %}
---

# {{ agent.role }}

**Persona**: {{ agent.display_name }}

## Description

{{ agent.description or agent.display_name }}

{% if agent_skills %}
## Skills

This agent uses the following skills for its operations:

{% for skill in agent_skills %}
### {{ skill.display_name }}

{{ skill.description }}

**Category**: {{ skill.category.value if skill.category else 'General' }}

{% endfor %}

For full skill instructions, see `.claude/skills/{{ agent_skills[0].name }}/SKILL.md` and related skill directories.

{% endif %}

## Core Responsibilities

- Execute assigned tasks according to project standards
- Maintain code quality and testing requirements
- Follow established patterns and conventions
- Document work and communicate status

## Agent Type

{% if agent.functional_category %}
**Type**: {{ agent.functional_category.value }}

{% if agent.functional_category.value == 'planning' %}
**Implementation Pattern**: This agent orchestrates work and delegates to specialist agents.
{% elif agent.functional_category.value == 'implementation' %}
**Implementation Pattern**: This agent performs specialized implementation work within its domain.
{% elif agent.functional_category.value == 'testing' %}
**Implementation Pattern**: This agent ensures quality through comprehensive testing.
{% elif agent.functional_category.value == 'documentation' %}
**Implementation Pattern**: This agent creates and maintains documentation.
{% else %}
**Implementation Pattern**: This agent provides utility and support functions.
{% endif %}
{% else %}
**Type**: specialist

**Implementation Pattern**: This agent performs specialized work within its domain.
{% endif %}

## Key Project Rules

{% for rule in rules[:10] %}
**{{ rule.rule_id }}**: {{ rule.name }} ({{ rule.enforcement_level.value }})
{% endfor %}

See CLAUDE.md for complete rule reference.

## Agent-Specific Guidance

{{ agent.sop_content or "Follow standard APM (Agent Project Manager) workflow patterns and delegate complex tasks appropriately." }}

## Quality Standards

Follow APM quality standards:
- Testing: >90% coverage (CI-004), AAA pattern
- Code: Type hints, docstrings, SOLID principles
- Time-boxing: ≤4h implementation, ≤6h testing, ≤4h documentation
- Database-first: All data operations through database
- Documentation: Use `apm document add` for all docs (DOC-020)

## Workflow Integration

**Usage**: Delegate to this agent via Task tool in CLAUDE.md master orchestrator.

**Example**:
```python
Task(
  subagent_type="{{ agent.role }}",
  description="<task description>",
  prompt="""CONTEXT: Work Item #<id> - <name>
OBJECTIVE: <clear goal>
REQUIREMENTS: <list>
DELIVERABLES: <list>"""
)
```

**Commands**: `apm task start <id>`, `apm task update <id>`, `apm task submit-review <id>`

---

**Agent ID**: {{ agent.id }} | **Priority**: {{ agent.priority or 50 }} | **Generated**: {{ generation_time }}
