---
description: Code Quality rules for this project
globs: ['**/*.py']
priority: 80
---

# Code Quality

## Rules from Database

Query these rules dynamically:
```bash
apm rules list --category="Code Quality"
```

### CQ-001: naming-convention

**Enforcement**: GUIDE

Language-specific naming (snake_case, camelCase)

---

### CQ-002: naming-descriptive

**Enforcement**: GUIDE

Names describe purpose

---

### CQ-003: naming-no-abbreviations

**Enforcement**: GUIDE

Avoid cryptic abbreviations

---

### CQ-004: naming-boolean-prefix

**Enforcement**: GUIDE

Booleans: is_/has_/can_

---

### CQ-005: naming-class-nouns

**Enforcement**: GUIDE

Classes are nouns

---

### CQ-006: naming-function-verbs

**Enforcement**: GUIDE

Functions are verbs

---

### CQ-007: naming-constants-upper

**Enforcement**: GUIDE

Constants in UPPER_SNAKE_CASE

---

### CQ-008: naming-private-underscore

**Enforcement**: GUIDE

Private methods start with _

---

### CQ-009: naming-max-length

**Enforcement**: LIMIT

Names â‰¤50 characters

---

### CQ-010: naming-no-single-letter

**Enforcement**: GUIDE

No single-letter names (except i, j, k in loops)

---

### CQ-011: file-one-class-per-file

**Enforcement**: GUIDE

One class per file (Java/TS style)

---

### CQ-012: file-module-init

**Enforcement**: GUIDE

Proper __init__.py exports (Python)

---

### CQ-013: file-test-colocation

**Enforcement**: GUIDE

Tests in tests-BAK/ directory

---

### CQ-014: file-max-imports

**Enforcement**: LIMIT

Max 20 imports per file

---

### CQ-015: file-no-circular-imports

**Enforcement**: GUIDE

No circular imports

---

### CQ-016: file-explicit-exports

**Enforcement**: GUIDE

Explicit __all__ in modules

---

### CQ-017: file-directory-structure

**Enforcement**: GUIDE

Domain-based directories (not by type)

---

### CQ-018: file-config-separate

**Enforcement**: GUIDE

Config in dedicated files

---

### CQ-019: file-no-unused-imports

**Enforcement**: GUIDE

Remove unused imports

---

